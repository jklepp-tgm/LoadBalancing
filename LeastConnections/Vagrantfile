# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"


$install_dependencies = <<SCRIPT
apt-get update
apt-get -y install screen python3
apt-get -y build-dep nginx-full
SCRIPT

$install_nginx = <<SCRIPT
wget http://nginx.org/download/nginx-1.7.8.tar.gz
tar -xf nginx-1.7.8.tar.gz
cd nginx-1.7.8/
./configure --prefix=$(pwd)/../nginx
make
make install
SCRIPT

$start_servers = <<SCRIPT
cd /web/server1
screen -c /dev/null -dmS server1 python3 -m http.server 8001
cd /web/server2
screen -c /dev/null -dmS server2 python3 -m http.server 8002
cd /web/server3
screen -c /dev/null -dmS server3 python3 -m http.server 8003
cd /web/server4
screen -c /dev/null -dmS server4 python3 -m http.server 8004
SCRIPT

$start_nginx = <<SCRIPT
nginx/sbin/nginx
SCRIPT


Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # All Vagrant configuration is done here. The most common configuration
  # options are documented and commented below. For a complete reference,
  # please see the online documentation at vagrantup.com.

  # Every Vagrant virtual environment requires a box to build off of.
  config.vm.box = "ubuntu/trusty64"

  config.vm.synced_folder "../web", "/web"

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  config.vm.network "forwarded_port", guest: 8000, host: 9000
  config.vm.network "forwarded_port", guest: 8001, host: 9001
  config.vm.network "forwarded_port", guest: 8002, host: 9002
  config.vm.network "forwarded_port", guest: 8003, host: 9003
  config.vm.network "forwarded_port", guest: 8004, host: 9004

  config.vm.provision "shell", inline: $install_dependencies
  config.vm.provision "shell", inline: $install_nginx, privileged: false
  config.vm.provision "file", source: "nginx_load_balancer.conf", destination: "nginx/conf/nginx.conf"
  config.vm.provision "shell", inline: $start_servers, run: "always", privileged: false
  config.vm.provision "shell", inline: $start_nginx, run: "always", privileged: false
end
